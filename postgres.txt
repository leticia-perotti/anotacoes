-> Anotações sobre estoure de exeções e tratativa de erros em banco de dados
  - ASSERTION 'condição do erro' , 'mensagam do erro';
    - Serve para estourar uma raise exception em apenas uma linha já tendo a condição de erro

  - EXCEPTION
    - É um bloco como o BEGIN e END, está entre eles e quando ela á estourada, deve ter CASE WHEN para tratar cada tipo de erro (o número do erro aparece quando ela estoura sem tratar)
    - CASE WHEN OTHERS -> garante que todas as outras exeções que não foram tratadas serão executadas.

  - Transações
    - Uma trigger sempre pertence a mesma transação de quem a acionou, então quando estourada, todo a transação, desdo o INSERT/UPDATE é cancelada;

  - RETURN NULL
    - Apenas para sair da transação

  - vVariavel := valor
    - Posso utilizar o símbolo de ":=" para atribuir valor a uma variável

  - FOUND
    - Posso utilizar a query IF NOT FOUND como uma condição para saber se a última query realmente foi executada e se teve algum retorno.

  - GET DIAGNOSTICS vVariavel = ROW_COUNT
    - Pega a quantidade de linhas inseridas/alterada pelo último registro e é tratavel para verificar se está certo;

  - Cursores
    - DECLARE v_cursor refcursor
    - Lá no begin:
        OPEN v_cursor FOR select * from instrutor;
    - OPEN v_cursor (SCROLL, NO SCROLL) -> permite ou não se posso mover para frente ou regredir nos itens do cursor

  - FETCH
    - Para pegar valores de dentro de um cursor (que seria como uma lista), tem q usar o comando fecth para percorrer um ponteiro dentro desta lista;
    - FETCH (last, next, first...) nome_cursor INTO nome_variavel

  - MOVE
    - Mesma função do fetch só que sem atribuir a uma variável, é menos utilizado

  - CLOSE
    - Depois de tudo devemos fechar um cursor
